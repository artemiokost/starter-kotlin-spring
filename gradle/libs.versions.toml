[versions]
flyway = "11.3.2"
gradle = "8.12.1"
gson = "2.11.0"
jackson = "2.18.2"
kotlin = "2.1.10"
kotlin-logging = "3.0.5"
kotlinx = "1.10.1"
netty = "4.1.118.Final"
netty-http3 = "0.0.28.Final"
postgresql = "42.7.5"
postgresql-r2dbc = "1.0.7.RELEASE"
spring-boot = "3.4.2"
spring-cloud = "2024.0.0"
spring-doc = "2.8.5"
telegram-bot-api = "8.1.0"

[libraries]
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
kotlin-logging-jvm = { group = "io.github.microutils", name = "kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx" }
netty-incubator-codec-http3 = { group = "io.netty.incubator", name = "netty-incubator-codec-http3", version.ref = "netty-http3" }
netty-resolver-dns-native-macos = { group = "io.netty", name = "netty-resolver-dns-native-macos", version.ref = "netty" }
netty-transport-native-epoll = { group = "io.netty", name = "netty-transport-native-epoll", version.ref = "netty" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
postgresql-r2dbc = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "postgresql-r2dbc" }
nimbus-jose-jwt = { group = "com.nimbusds", name = "nimbus-jose-jwt", version = "9.40" }
springdoc-openapi-starter-common = { group = "org.springdoc", name = "springdoc-openapi-starter-common", version.ref = "spring-doc" }
springdoc-openapi-starter-webflux-ui = { group = "org.springdoc", name = "springdoc-openapi-starter-webflux-ui", version.ref = "spring-doc" }
spring-boot-configuration-processor = { group = "org.springframework.boot", name = "spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-cache = { group = "org.springframework.boot", name = "spring-boot-starter-cache", version.ref = "spring-boot" }
spring-boot-starter-data-r2dbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-r2dbc", version.ref = "spring-boot" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-cloud-dependencies = { group = "org.springframework.cloud", name = "spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-cloud-resilience4j = { group = "org.springframework.cloud", name = "spring-cloud-starter-circuitbreaker-reactor-resilience4j" }
telegram-bot-api = { group = "com.github.pengrad", name = "java-telegram-bot-api", version.ref = "telegram-bot-api" }

[bundles]
common = [
    "spring-boot-starter-security",
    "spring-boot-starter-data-r2dbc"
]
core = [
    "gson",
    "flyway-core",
    "flyway-database-postgresql",
    "nimbus-jose-jwt",
    "netty-incubator-codec-http3",
    "netty-resolver-dns-native-macos",
    "netty-transport-native-epoll",
    "postgresql",
    "postgresql-r2dbc",
    "springdoc-openapi-starter-common",
    "springdoc-openapi-starter-webflux-ui",
    "spring-boot-starter-actuator",
    "spring-boot-starter-data-r2dbc",
    "spring-boot-starter-security",
    "spring-boot-starter-validation",
    "spring-boot-starter-webflux",
    "telegram-bot-api"
]
kotlin = [
    "jackson-module-kotlin",
    "kotlin-logging-jvm",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-reactor"
]

[plugins]
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }